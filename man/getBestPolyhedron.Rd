% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getDist.R
\name{getBestPolyhedron}
\alias{getBestPolyhedron}
\title{Adjust a polyhedron from a set of facets to approach a reference polyhedron}
\usage{
getBestPolyhedron(A, B, nbLines, maxiter, thresholdIndic, quad = F)
}
\arguments{
\item{A}{\code{data.table}, fix polyhedron, data.table containing at least 
ram, Date, Period and two ptdf columns :
\itemize{
 \item ptdfAT : autrichian vertices
 \item ptdfBE : belgium vertices
 \item ptdfDE : german vertices
 \item ptdfFR : french vertices
 \item ram : line limits
 \item Date : date in format YYYY-MM-DD
 \item Period : hour in the day, between 1 and 24
}}

\item{nbLines}{\code{numeric}, number of half-lines used to compute the distance
between the two polyhedra.}

\item{maxiter}{\code{numeric}, maximum number of iteration, it is one of the 
two stopping criteria of this function.}

\item{thresholdIndic}{\code{numeric}, maximum number of iteration, it is one of the 
two stopping criteria of this function.}

\item{A}{\code{data.table}, moving polyhedron, data.table containing at least 
ram, Date, Period and two ptdf columns :
\itemize{
 \item ptdfAT : autrichian vertices
 \item ptdfBE : belgium vertices
 \item ptdfDE : german vertices
 \item ptdfFR : french vertices
 \item ram : line limits
 \item Date : date in format YYYY-MM-DD
 \item Period : hour in the day, between 1 and 24
}}
}
\description{
This function takes in input two polyhedrons, the reference one and
the moving one (or set of facets). It returns in output a really close polyhedron,
to the reference one, with the set of facets. It runs a minimization program 
on a distance using the intersections of a set of lines and the two polyhedrons 
and validate the moving polyhedron with a volume indicator.
}
\examples{

\dontrun{
library(data.table)
library(quadprog)
library(linprog)
polyhedra <- readRDS("~/RTE/fbAntares/inst/testdata/polyhedra.rds")
A <- polyhedra[Date == "2019-02-14"]
B <- polyhedra[Date == "2019-02-15"]
nbLines <- 10000
maxiter <- 20
thresholdIndic <- 0.9
quad <- F

 getBestPolyhedron(
 A = A, B = B, nbLines = nbLines, maxiter = maxiter,
 thresholdIndic = thresholdIndic, quad = quad)
}

}
