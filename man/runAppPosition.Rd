% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphs.R
\name{runAppPosition}
\alias{runAppPosition}
\title{Run a shiny application to visualise the flow-based typical domains and the Net Positions reached within 
in an Antares simulation}
\usage{
runAppPosition(dta, fb_opts = antaresRead::simOptions(),
  country_list = c("fr", "be", "de", "nl", "at"))
}
\arguments{
\item{dta}{\code{antaresDataList} Antares output data, imported with \link{readAntares}. 
It can be filtered (see examples).}

\item{fb_opts}{\code{list} of simulation parameters returned by the function
\link{setSimulationPath} or flow-based model directory obtained with
\link{setFlowbasedPath}. By default, the value will be indicated by \code{antaresRead::simOptions()}}

\item{country_list}{\code{character} Names of the countries used in the study}
}
\description{
Run a shiny application displaying, after running an Antares simulation, 
how the domains have been used by the optimizer to fix the exchanges in the 
CWE area. The user can in the application select a period of time on a 
calendar, choose to only display some typical days and hours, change the 
colors palette, filter unused domains... 
(all the parameters of the function \link{plotNetPositionFB}). 
It is possible to filter the output data beforehand to only display situations 
with loss of load (see examples).
}
\examples{

\dontrun{
## Select a study and import the data
study <- "../../Pour Julien/blop/MT_base_nucM2_2023"
opts <- antaresRead::setSimulationPath(study, 18)
dta <- antaresRead::readAntares(areas = c("fr", "be", "de", "nl", "at"),
         links = c("be - de","be - fr","be - nl","de - fr","de - nl", "at - de"), 
         select = c("LOLD", "UNSP. ENRG", "DTG MRG", "UNSP. ENRG", "BALANCE", "FLOW LIN."), 
         mcYears = 1, opts = opts)

## Run the application
runAppPosition(dta)

## Filter the data on situations with unsupplied energy 
# If you want to keep only timeId with LOLD!=0 you can't use : 
# dta$areas <- dta$areas[LOLD!=0] otherwise some areas
# Otherwise some areas are forgotten: the data must be filtered to keep 
# all areas at specific timesteps.
 
 ## An exemple of authorized filter :
 idC <- c(antaresRead::getIdCols(dta$areas))
 idC <- idC[idC!="area"]
 LOLD <- dta$areas[,lapply(.SD, sum), by = idC, .SDcols = "LOLD"]
 LOLD <- LOLD[LOLD!=0]
 LOLD[,LOLD := NULL]
 
 # Merge to filter data
 dta$areas <- merge(dta$areas, LOLD, by =  idC)
 ## End filter

 runAppPosition(dta)
}

}
